name: Build runtimes
on: [push]
env:
  JAVA_VERSION: '24'
  FX_VERSION: '24.0.2'

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # macos aarch64
          - os: macos-latest
            osheader: osx
            arch: aarch64
            path_sep: ':'
            dist: macOS_aarch64

          # macos x64
          - os: macos-13
            arch: x64
            osheader: osx
            path_sep: ':'
            dist: macOS_x64
            
          # linux ubuntu
          - os: ubuntu-latest
            arch: x64
            osheader: linux
            path_sep: ':'
            dist: linux_x64
            
          # linux aarch64
          - os: ubuntu-latest
            arch: aarch64
            osheader: linux
            path_sep: ':'
            dist: linux_aarch64

          # windows
          - os: windows-latest
            arch: x64
            osheader: windows
            path_sep: ';'
            dist: windows_x64
            
    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ env.JAVA_VERSION}}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.JAVA_VERSION }}

    - name: Download JavaFX ${{ env.FX_VERSION }} jmods
      run: |
        fx_jmods_url="https://download2.gluonhq.com/openjfx/${{ env.FX_VERSION }}/openjfx-${{ env.FX_VERSION }}_${{ matrix.osheader }}-${{ matrix.arch }}_bin-jmods.zip"
        curl -L -o jfx-jmods.zip \
           "${fx_jmods_url}"
        unzip -q jfx-jmods.zip -d jfx-jmods

    - name: Build runtime
      run: |
        JMODS_DIR="${JAVA_HOME}/jmods"
        FX_JMODS_DIR="$GITHUB_WORKSPACE/jfx-jmods/javafx-jmods-${{ env.FX_VERSION }}"
        MODULE_PATH="$JMODS_DIR${{ matrix.path_sep }}$FX_JMODS_DIR"
        "$JAVA_HOME/bin/jlink" \
         --module-path "$MODULE_PATH" \
         --add-modules java.base,java.logging,java.desktop,java.xml,javafx.base,javafx.controls,javafx.fxml,javafx.graphics \
         --strip-debug --no-header-files --no-man-pages --compress=2 \
         --output runtime

    - name: Package artifacts
      run: |
        set -euo pipefail
        DIST="${{ matrix.dist }}"
        mkdir -p "$DIST"
        mv ./runtime/* "$DIST/"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: test_${{ matrix.os }}_${{ matrix.arch }}
        path: |
          ${{ matrix.dist }}/**
    
