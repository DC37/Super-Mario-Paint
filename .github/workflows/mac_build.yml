name: Build MacOS runtime
on: [push]
env:
  JAVA_VERSION: '24'
  FX_VERSION: '24.0.2'

jobs:
  macos_build:
    runs-on: macos-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ env.JAVA_VERSION}}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.JAVA_VERSION }}

    - name: Download JavaFX ${{ env.FX_VERSION }} jmods
      run: |
        curl -L -o jfx-jmods.zip \
           "https://download2.gluonhq.com/openjfx/${{ env.FX_VERSION }}/openjfx-${{ env.FX_VERSION }}_osx-aarch64_bin-jmods.zip"
        unzip -q jfx-jmods.zip -d jfx-jmods

    - name: Build MacOS runtime
      run: |
        JMODS_DIR="${JAVA_HOME}/jmods"
        FX_JMODS_DIR="$GITHUB_WORKSPACE/jfx-jmods/javafx-jmods-${{ env.FX_VERSION }}"
        "$JAVA_HOME/bin/jlink" \
         --module-path "$JMODS_DIR:$FX_JMODS_DIR" \
         --add-modules java.base,java.logging,java.desktop,java.xml,javafx.base,javafx.controls,javafx.fxml,javafx.graphics \
         --strip-debug --no-header-files --no-man-pages --compress=2 \
         --output runtime-mac

    - name: Package runtime
      run: |
        set -euo pipefail
        DIST="dist_macOS"
        mkdir -p "$DIST"
        mv runtime-mac "$DIST/runtime"
        cat > "$DIST/run.sh" << 'SH'
        #!/usr/bin/env bash
        set -euo pipefail
        DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
        exec "$DIR/runtime/bin/java" -jar "$DIR/smptest.jar" "$@"
        SH
        chmod +x "$DIST/run.sh"
        tar -czf "${DIST}.tar.gz" "$DIST"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: test_mac
        path: |
          dist_macOS/**
          dist_macOS.tar.gz
    
